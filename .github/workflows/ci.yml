name: Package CI

on:
  push:
    branches: [main, master, develop, development]
  pull_request:
    branches: [main, master, develop, development]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]
    defaults:
      run:
        shell: bash -l {0}

    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: ${{ matrix.python-version }}
          auto-update-conda: true
          auto-activate-base: true
      
      - name: Install Pixi
        uses: prefix-dev/setup-pixi@v0.6.0 # Using a recent version
        with:
          cache: true
      
      - name: Install project dependencies (using Pixi)
        run: |
          pixi install # This will install dependencies based on pyproject.toml and create/use pixi.lock
      
      - name: Run tests with coverage
        run: |
          # Ensure pytest is run from the pixi environment and generates coverage.xml
          pixi run pytest tests --cov=candles_feed --cov-report=xml:coverage.xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          file: ./coverage.xml
          fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}

    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: "3.10"
          auto-update-conda: true
          auto-activate-base: true
      
      - name: Install Pixi
        uses: prefix-dev/setup-pixi@v0.6.0 # Using a recent version
        with:
          cache: true

      - name: Install project dependencies (using Pixi)
        run: |
          pixi install # This will install dependencies based on pyproject.toml

      - name: Format and lint with ruff
        run: |
          pixi run ci-check

      - name: Type check with mypy
        run: |
          pixi run ci-hints
