name: Package CI

on:
  push:
    branches: [main, master, develop, development]
  pull_request:
    branches: [main, master, develop, development]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]
    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v4

      - name: Install Pixi
        uses: prefix-dev/setup-pixi@v0.8.1

      - name: Install project dependencies (using Pixi)
        run: |
          pixi install # This will install dependencies based on pyproject.toml and create/use pixi.lock
          pixi run pip install -e .

      - name: Run unit tests with coverage
        run: |
          # Run unit tests first to avoid URL patching pollution from integration tests
          pixi run pytest tests -m "not integration" --cov=candles_feed --cov-report=xml:coverage.xml
          
      - name: Run integration tests separately
        run: |
          # Run integration tests separately to prevent URL patching pollution
          pixi run pytest tests -m "integration" --cov=candles_feed --cov-append

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          file: ./coverage.xml
          fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v4

      - name: Install Pixi
        uses: prefix-dev/setup-pixi@v0.8.1

      - name: Install project dependencies (using Pixi)
        run: |
          pixi install # This will install dependencies based on pyproject.toml
          pixi run pip install -e .

      - name: Format and lint with ruff
        run: |
          pixi run ci-check

      - name: Type check with mypy
        run: |
          pixi run ci-hints
