[build-system]
requires = [
    "hatchling>=1.18.0",
    "Cython>=3",
    "wheel>=0.37.0",
]
build-backend = "hatchling.build"

[project]
name = "hb-candles-feed"
version = "0.1.0"
description = "A Hummingbot candles-feed sub-package"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "Apache-2.0"}
authors = [
    {name = "Hummingbot Contributors", email = "dev@hummingbot.io"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Cython",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    # Common dependencies
    "pandas>=1.0.0",
    "numpy>=1.20.0",
    "aiohttp>=3.8.0",
    "pydantic>=2",
]

[project.urls]
Homepage = "https://github.com/hummingbot/hummingbot"
Documentation = "https://github.com/hummingbot/hummingbot/tree/master/sub-packages/candles-feed/docs"
Repository = "https://github.com/hummingbot/hummingbot/tree/master/sub-packages/candles-feed"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "pytest-timeout>=2.1.0",
    "pyupgrade",
    "ruff>=0.1.5",
    "mypy>=1.5.1",
    "cython-lint>=0.15.0",
]
doc = [
    "mkdocs>=1.3.0",
    "mkdocs-git-revision-date-localized-plugin",
    "mkdocs-material>=8.2.0",
    "mkdocstrings-handlers",
    "mkdocstrings-python",
    "mkdocstrings>=0.18.0",
    "pymdown-extensions>=8.0.0",
    "mkdocs-pyproject>=1.0.0",
]
hummingbot = [
    # Hummingbot-specific dependencies would go here
]

# Hatch configuration for conda environments
[tool.hatch.env]
requires = ["hatch-conda>=0.5.2"]
type = "conda"

# Default environment
[tool.hatch.envs.default]
conda-channels = ["conda-forge", "defaults"]
features = ["dev"]
dependencies = [
    # Core dependencies
    "aiohttp>=3.8.0",
    "pandas>=1.0.0",
    "python>=3.10",

    # Include project dependencies automatically
    "{root:dependencies}",

    # Development tools
    "cython>=3",
    "hatch>=1.9.0",
    "hatch-conda>=0.5.2",
    "wheel>=0.37.0",
]

# Pip dependencies with --no-deps flag
[tool.hatch.envs.default.pip-no-deps]
dependencies = []

# Scripts for the default environment
[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-unit = "pytest tests/unit"
test-integration = "pytest tests/integration"
lint = "ruff check candles_feed tests"
format = "ruff format candles_feed tests"
typecheck = "mypy candles_feed"
lint-cython = "cython-lint candles_feed"
check = ["format", "lint", "typecheck", "test"]

# Documentation environment
[tool.hatch.envs.docs]
conda-channels = ["conda-forge", "defaults"]
features = ["doc"]
dependencies = [
    # Documentation-specific dependencies
    "mkdocs>=1.3.0",
    "mkdocs-material>=8.2.0",
    "mkdocstrings>=0.18.0",
]

# Documentation scripts
[tool.hatch.envs.docs.scripts]
build = "mkdocs build"
serve = "mkdocs serve"

# Hatch build configuration with Cython integration via custom hook
[tool.hatch.build.targets.wheel]
packages = ["candles_feed"]
build-hook = "setup-tools.hatch-hooks.cython_build_hook"

# Distribution package configuration
[tool.hatch.build.targets.sdist]
include = [
    "candles_feed/**/*.py",
    "candles_feed/**/*.pyx",
    "candles_feed/**/*.pxd",
    "docs/**/*.md",
    "docs/**/*.yml",
    "setup-tools/**/*",
    "LICENSE",
    "README.md",
    "pyproject.toml",
    "setup.py",
]
exclude = [
    "build", 
    "dist", 
    "**/__pycache__", 
    "**/*.pyc", 
    ".git", 
    ".github",
    "**/.pytest_cache",
    "**/.mypy_cache",
    "**/.DS_Store",
    "**/*.so",
    "**/*.dylib",
]

[tool.ruff]
target-version = "py38"
line-length = 100

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "I",   # isort
    "W",   # pycodestyle warnings
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
]
ignore = [
    "E203",  # whitespace before ':'
    "E501",  # line too long - handled by formatter
    "F401",  # unused imports - we'll address these gradually
]
unfixable = ["F401"]  # unused imports - let the developer decide

[tool.ruff.lint.isort]
known-first-party = ["candles_feed"]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
markers = [
    "unit: marks tests as unit tests",
    "integration: marks tests as integration tests (deselect with '-m \"not integration\"')",
    "e2e: marks tests as end-to-end tests",
    "asyncio: marks tests as asyncio tests",
]
log_cli = true
log_cli_level = "INFO"

[tool.mkdocs]
site_name = "Candles Feed Documentation"
site_description = "Documentation for the Candles Feed framework"
site_author = "Hummingbot Team"

repo_name = "hummingbot/hummingbot"
repo_url = "https://github.com/hummingbot/hummingbot"

[tool.mkdocs.theme]
name = "material"
palette = { primary = "blue", accent = "blue" }
features = [
    "navigation.tabs",
    "navigation.sections",
    "navigation.path",
    "content.code.copy",
    "content.code.annotate"
]

[tool.mkdocs.markdown_extensions]
admonition = {}
codehilite = {}
pymdownx = { superfences = { custom_fences = [{ name = "mermaid", class = "mermaid", format = "!!python/name:pymdownx.superfences.fence_code_format" }] } }
pymdownx-tabbed = { alternate_style = true }
pymdownx-highlight = {}
pymdownx-inlinehilite = {}
pymdownx-snippets = {}
pymdownx-smartsymbols = {}
pymdownx-tasklist = {}
pymdownx-emoji = {}
toc = { permalink = true }

[tool.mkdocs.plugins]
search = {}
mkdocstrings = { default_handler = "python", handlers = { python = { selection = { docstring_style = "restructured-text" }, rendering = { show_source = true, show_if_no_docstring = false, heading_level = 2 } } } }
"git-revision-date-localized" = {}

[tool.mkdocs.nav]
Home = "index.md"
"Getting Started" = [
    { Installation = "getting_started/installation.md" },
    { "Quick Start" = "getting_started/quick_start.md" },
    { Architecture = "getting_started/architecture.md" }
]
Adapters = [
    { Overview = "adapters/overview.md" },
    { Implementation = "adapters/implementation.md" },
    { "REST API" = "adapters/rest_api.md" },
    { WebSocket = "adapters/websocket.md" },
    { Testing = "adapters/testing.md" }
]
"Testing Resources" = [
    { Overview = "testing_resources/overview.md" },
    { "Mock Server" = "testing_resources/mock_server.md" },
    { "Candle Data Factory" = "testing_resources/candle_data_factory.md" },
    { "Exchange Simulation" = "testing_resources/exchange_simulation.md" },
    { "Usage Examples" = "testing_resources/usage_examples.md" }
]
Examples = [
    { "Simple Usage" = "examples/simple_usage.md" },
    { "Binance Spot Example" = "examples/binance_spot_example.md" },
    { "Mock Server Example" = "examples/mock_server_example.md" }
]
"API Reference" = [
    { "Core Components" = "api_reference/core.md" },
    { Adapters = "api_reference/adapters.md" },
    { Utilities = "api_reference/utilities.md" },
    { "Testing Resources" = "api_reference/testing_resources.md" }
]
"Development Guide" = [
    { Contributing = "development/contributing.md" },
    { "Coding Standards" = "development/coding_standards.md" },
    { "Testing Guide" = "development/testing_guide.md" }
]
